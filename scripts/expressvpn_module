#!/bin/bash
while getopts scd flag
do
    case "${flag}" in
        c) connect="True";;
		s) state="True";;
		d) disconnect="True";;
    esac
done

# STATUS
if [[ "$state" == "True" ]]; then
	status=$(expressvpn status 2>/dev/null)
	[[ "$status" == "Not connected" ]] || [[ -z $status ]] && echo "" || echo ""
fi

# CONNECT
if [[ "$connect" == "True" ]]; then
	! [[ -z $(systemctl status expressvpn | grep inactive) ]] && gksu systemctl start expressvpn && sleep 1

	expressvpn_locations=$(expressvpn list all | sed -e '/-----.*$/d ; /ALIAS.*$/d; /Recommended.*$/d; s/.*Y$/ &/g; s/Y$/star/g'| rofi -font "Fira Code Nerd Font 15" -dmenu -i -p 'Recommended Locations' -location 3 -lines 5 -width 45 -yoffset 40)
	if ! [[ -z $expressvpn_locations ]] && ! [[ $expressvpn_locations == "refresh" ]]; then
		status=$(expressvpn status 2>/dev/null)
		! [[ "$status" == "Not connected" ]] || ! [[ -z $status ]] && expressvpn disconnect
		selected_location=$(echo "$expressvpn_locations" | sed 's/\s\+/ /g; s/ //'| cut -d' ' -f1 )
		expressvpn connect $selected_location
	elif [[ $expressvpn_locations == "refresh" ]]; then
		expressvpn refresh && /$HOME/scripts/expressvpn_module -c
	else
		[[ -z $(systemctl status expressvpn | grep inactive) ]] && gksu systemctl stop expressvpn
	fi
fi

# DISCONNECT
if [[ "$disconnect" == "True" ]]; then
	expressvpn disconnect
	[[ -z $(systemctl status expressvpn | grep inactive) ]] && gksu systemctl stop expressvpn
fi
